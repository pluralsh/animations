---
import SquareFlat from "../components/SquareFlat.astro";
import iconKubernetes from "../assets/icons/icon-k8s.png";

const baseIconProps = {
  image: (iconKubernetes as any),
  gradientStroke: true,
  hide: false,
  active: false,
};
const iconProps = [
  [{ ...baseIconProps }, { ...baseIconProps }, { ...baseIconProps }],
  [{ ...baseIconProps }, { ...baseIconProps }, { ...baseIconProps }],
  [{ ...baseIconProps }, { ...baseIconProps }, { ...baseIconProps }],
];
const { class: className, bigSquareSize } = Astro.props;

const squareWidth = 68;
const squareHeight = 68;
const gapX = 20;
const gapY = 20;
const xSpacing = squareWidth + gapX;
const ySpacing = squareHeight + gapY;
const topOffset = bigSquareSize - (squareHeight * 3 + gapY * 2);
---

<div class:list={["hhh_root", className]}>
  {
    iconProps.map((row, j) => {
      const x = row.map(({ image, gradientStroke, hide }, i) => {
        return (
          <div
            class:list={["hhh_clustersSquare"]}
            style={{
              top: `${j * ySpacing}px`,
              left: `${i * xSpacing}px`,
              ...(hide ? { display: "none" } : {}),
            }}
          >
            {hide ? null : (
              <SquareFlat
                mode="cluster"
                gradientStroke={gradientStroke}
                image={image}
                width={squareWidth}
                height={squareHeight}
                data-index-x={i}
                data-index-y={iconProps.length - j - 1}
              />
            )}
          </div>
        );
      });
      return <>{x}</>;
    })
  }
</div>
<style
  lang="scss"
  define:vars={{
    squareWidth: `${squareWidth}px`,
    squareHeight: `${squareHeight}px`,
    topOffset: `${topOffset}px`,
  }}
>
  .hhh_root {
    position: absolute;
    top: var(--topOffset);
  }
  .hhh_clustersSquare {
    position: absolute;
    width: var(--squareWidth);
    height: var(--squareWidth);
  }
</style>
